{
    "name": "hol-light-simple",
    "displayName": "HOL Light",
    "description": "An extension for VS Code which provides support for HOL Light",
    "version": "1.1.0",
    "license": "SEE LICENSE IN LICENSE",
    "publisher": "monadius",
    "engines": {
        "vscode": "^1.78.0"
    },
    "categories": [
        "Programming Languages"
    ],
    "keywords": [
        "hol",
        "hol light",
        "theorem prover",
        "proof assistant"
    ],
    "repository": {
        "type": "git",
        "url": "https://github.com/monadius/vscode-hol-light"
    },
    "bugs": "https://github.com/monadius/vscode-hol-light/issues",
    "homepage": "https://github.com/monadius/vscode-hol-light/blob/master/README.md",
    "icon (TODO)": "images/hol-light-logo.png",
    "activationEvents": [],
    "main": "./out/extension.js",
    "contributes": {
        "commands": [
            {
                "category": "HOL Light",
                "command": "hol-light.repl",
                "title": "New HOL Light REPL Session"
            },
            {
                "category": "HOL Light",
                "command": "hol-light.set_path",
                "title": "Set HOL Light path"
            },
            {
                "category": "HOL Light",
                "command": "hol-light.repl_send_statement",
                "title": "Send Current Statement to REPL"
            },
            {
                "category": "HOL Light",
                "command": "hol-light.repl_send_break",
                "title": "Send ^C to REPL"
            },
            {
                "category": "HOL Light",
                "command": "hol-light.repl_send_goal",
                "title": "Set Current Term as a Goal"
            },
            {
                "category": "HOL Light",
                "command": "hol-light.repl_send_tactic",
                "title": "Execute Current Tactic"
            },
            {
                "category": "HOL Light",
                "command": "hol-light.repl_send_tactic_no_newline",
                "title": "Execute Current Tactic and do not Move the Cursor"
            },
            {
                "category": "HOL Light",
                "command": "hol-light.repl_send_tactic_multline",
                "title": "Execute Current Tactic (Multiple Lines)"
            },
            {
                "category": "HOL Light",
                "command": "hol-light.repl_send_tactic_multline_no_newline",
                "title": "Execute Current Tactic (Multiple Lines) and do not Move the Cursor"
            },
            {
                "category": "HOL Light",
                "command": "hol-light.select_tactic_multline",
                "title": "Select Tactic at the Cursor Position"
            },
            {
                "category": "HOL Light",
                "command": "hol-light.repl_print_goal",
                "title": "Print Current Goal"
            },
            {
                "category": "HOL Light",
                "command": "hol-light.repl_back_proof",
                "title": "Revert One Proof Step"
            },
            {
                "category": "HOL Light",
                "command": "hol-light.repl_rotate_goal",
                "title": "Rotate Subgoals"
            },
            {
                "category": "HOL Light",
                "command": "hol-light.search",
                "title": "Search Theorems"
            },
            {
                "category": "HOL Light",
                "command": "hol-light.remove_highlighting",
                "title": "Remove Highlighting"
            },
            {
                "category": "HOL Light",
                "command": "hol-light.jump_to_highlighting",
                "title": "Jump to Highlighted Text"
            }
        ],
        "keybindings": [
            {
                "key": "ctrl+`",
                "command": "workbench.action.terminal.focus",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+`",
                "command": "workbench.action.focusActiveEditorGroup",
                "when": "terminalFocus"
            },
            {
                "key": "alt+e",
                "command": "hol-light.repl_send_statement",
                "when": "editorTextFocus && editorLangId == hol-light-ocaml"
            },
            {
                "key": "alt+c",
                "command": "hol-light.repl_send_break",
                "when": "editorLangId == hol-light-ocaml"
            },
            {
                "key": "alt+g",
                "command": "hol-light.repl_send_goal",
                "when": "editorTextFocus && editorLangId == hol-light-ocaml"
            },
            {
                "key": "alt+l",
                "command": "hol-light.repl_send_tactic",
                "when": "editorTextFocus && editorLangId == hol-light-ocaml"
            },
            {
                "key": "alt+k",
                "command": "hol-light.repl_send_tactic_no_newline",
                "when": "editorTextFocus && editorLangId == hol-light-ocaml"
            },
            {
                "key": "alt+m",
                "command": "hol-light.repl_send_tactic_multline",
                "when": "editorTextFocus && editorLangId == hol-light-ocaml"
            },
            {
                "key": "alt+n",
                "command": "hol-light.repl_send_tactic_multline_no_newline",
                "when": "editorTextFocus && editorLangId == hol-light-ocaml"
            },
            {
                "key": "alt+r",
                "command": "hol-light.select_tactic_multline",
                "when": "editorTextFocus && editorLangId == hol-light-ocaml"
            },
            {
                "key": "alt+p",
                "command": "hol-light.repl_print_goal",
                "when": "editorLangId == hol-light-ocaml"
            },
            {
                "key": "alt+b",
                "command": "hol-light.repl_back_proof",
                "when": "editorLangId == hol-light-ocaml"
            },
            {
                "key": "alt+o",
                "command": "hol-light.repl_rotate_goal",
                "when": "editorLangId == hol-light-ocaml"
            },
            {
                "key": "alt+s",
                "command": "hol-light.search",
                "when": "editorLangId == hol-light-ocaml"
            },
            {
                "key": "alt+d",
                "command": "hol-light.remove_highlighting",
                "when": "editorLangId == hol-light-ocaml"
            },
            {
                "key": "alt+j",
                "command": "hol-light.jump_to_highlighting",
                "when": "editorLangId == hol-light-ocaml"
            }
        ],
        "languages": [
            {
                "id": "hol-light-ocaml",
                "aliases": [
                    "HOL Light"
                ],
                "extensions": [
                    ".hl"
                ],
                "configuration": "./language-configuration.json"
            },
            {
                "id": "hol-light-term",
                "configuration": "./language-configuration.json"
            }
        ],
        "grammars": [
            {
                "language": "hol-light-term",
                "scopeName": "source.hol-light-term",
                "path": "./syntaxes/hol-light-term.tmLanguage.json"
            },
            {
                "language": "hol-light-ocaml",
                "scopeName": "source.hol-light-ocaml",
                "path": "./syntaxes/hol-light-ocaml.tmLanguage.json",
                "embeddedLanguages": {
                    "meta.embedded.block.hol-light-term": "hol-light-term",
                    "string.quoted.single.hol-light-term": "hol-light-term"
                },
                "tokenTypes": {
                    "string.quoted.single.hol-light-term": "other"
                }
            }
        ],
        "snippets": [
            {
                "language": "hol-light-ocaml",
                "path": "./snippets/hol-light.json"
            }
        ],
        "configuration": {
            "title": "HOL Light configuration",
            "properties": {
                "hol-light.path": {
                    "type": "string",
                    "default": "",
                    "description": "Path to HOL Light"
                },
                "hol-light.exePaths": {
                    "type": "array",
                    "default": [],
                    "description": "Paths to HOL Light startup scripts"
                },
                "hol-light.tacticMaxLines": {
                    "type": "number",
                    "default": 30,
                    "description": "Maximum number of lines which can be selected by the multiline tactic command"
                },
                "hol-light.simpleSelection": {
                    "type": "boolean",
                    "default": false,
                    "description": "Use a simple text selection algorithm for statements and HOL terms. Could be enabled if the standard selection algorithm is too slow for large files"
                },
                "hol-light.highlightColor": {
                    "type": "string",
                    "default": "editor.wordHighlightStrongBackground",
                    "description": "Color for highlighting text sent to a HOL Light REPL. Could be either a reference to a color theme or a color in the format ##RRGGBBAA. If this value is empty then the text is not highlighted"
                }
            }
        },
        "configurationDefaults": {
            "[hol-light]": {
                "editor.tabSize": 2,
                "editor.insertSpaces": true
            }
        },
        "menus": {
            "commandPalette": [
                {
                    "command": "hol-light.repl_send_statement",
                    "when": "editorLangId == hol-light-ocaml"
                },
                {
                    "command": "hol-light.repl_send_break",
                    "when": "editorLangId == hol-light-ocaml"
                },
                {
                    "command": "hol-light.repl_send_goal",
                    "when": "editorLangId == hol-light-ocaml"
                },
                {
                    "command": "hol-light.repl_send_tactic",
                    "when": "editorLangId == hol-light-ocaml"
                },
                {
                    "command": "hol-light.repl_send_tactic_no_newline",
                    "when": "editorLangId == hol-light-ocaml"
                },
                {
                    "command": "hol-light.repl_send_tactic_multline",
                    "when": "editorLangId == hol-light-ocaml"
                },
                {
                    "command": "hol-light.repl_send_tactic_multline_no_newline",
                    "when": "editorLangId == hol-light-ocaml"
                },
                {
                    "command": "hol-light.select_tactic_multline",
                    "when": "editorLangId == hol-light-ocaml"
                },
                {
                    "command": "hol-light.repl_print_goal",
                    "when": "editorLangId == hol-light-ocaml"
                },
                {
                    "command": "hol-light.repl_back_proof",
                    "when": "editorLangId == hol-light-ocaml"
                },
                {
                    "command": "hol-light.repl_rotate_goal",
                    "when": "editorLangId == hol-light-ocaml"
                }
            ],
            "editor/context": [
                {
                    "command": "hol-light.repl",
                    "when": "editorLangId == hol-light-ocaml",
                    "group": "navigation@1"
                },
                {
                    "command": "hol-light.repl_send_statement",
                    "when": "editorLangId == hol-light-ocaml",
                    "group": "navigation@2"
                },
                {
                    "command": "hol-light.repl_send_goal",
                    "when": "editorLangId == hol-light-ocaml",
                    "group": "navigation@3"
                },
                {
                    "command": "hol-light.repl_send_tactic_no_newline",
                    "when": "editorLangId == hol-light-ocaml",
                    "group": "navigation@4"
                },
                {
                    "command": "hol-light.repl_send_tactic_multline_no_newline",
                    "when": "editorLangId == hol-light-ocaml",
                    "group": "navigation@5"
                },
                {
                    "command": "hol-light.search",
                    "when": "editorLangId == hol-light-ocaml",
                    "group": "navigation@6"
                }
            ]
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "pretest": "npm run compile && npm run lint",
        "lint": "eslint src --ext ts",
        "test": "node ./out/test/runTest.js"
    },
    "devDependencies": {
        "@types/glob": "^8.1.0",
        "@types/mocha": "^10.0.1",
        "@types/node": "16.x",
        "@types/vscode": "^1.78.0",
        "@typescript-eslint/eslint-plugin": "^5.59.1",
        "@typescript-eslint/parser": "^5.59.1",
        "@vscode/test-electron": "^2.3.0",
        "esbuild": "^0.17.19",
        "eslint": "^8.39.0",
        "glob": "^8.1.0",
        "mocha": "^10.2.0",
        "typescript": "^5.0.4"
    }
}
